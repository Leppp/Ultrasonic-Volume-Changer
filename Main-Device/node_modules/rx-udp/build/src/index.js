"use strict";
var Rx = require("rx");
function observableFromSocket(map, socket) {
    return Rx.Observable.create(function (observer) {
        // we could use compose here, but it is not simple with types. this is preferable
        socket.on("message", function (message, remoteInfo) {
            observer.onNext(map(message, remoteInfo));
        });
        socket.on("error", function (err) {
            observer.onError(err);
        });
        socket.on("close", function () {
            observer.onCompleted();
        });
    });
}
exports.observableFromSocket = observableFromSocket;
;
function observerForSocket(map, port, address, socket) {
    return Rx.Observer.create(function (t) {
        var buffer = map(t);
        socket.send(buffer, 0, buffer.byteLength, port, address);
    }, function () { return socket.close(); }, function () { return socket.close(); });
}
exports.observerForSocket = observerForSocket;
//# sourceMappingURL=index.js.map